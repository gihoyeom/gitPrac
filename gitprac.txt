<h2> git 사용 시작 </h2>

<h4> git이란? </h4>
개발자로서 협업을 하는데 필수적인 git. 

어제까지만 해도 git과 github는 같은 것인 줄 알았다. 

하지만 git은 분산버전관리 시스템을 말하는 것이고, 
github는 온라인 웹페이지로 원격 repository를 저장하며 타인과 협업을 할 수 있는 허브이다. 

<h4> github를 사용함의 의의 </h4>
처음에 로컬에 있는 파일을 올리고자 하면 원격 repo를 생성하고 로컬의 파일을 tracking시켜서 연결하면 된다.

원격 repo를 사용할 경우 로컬에 파일이 없더라도 clone을 통해 원격 repo의 파일을 가져와서 작업하면 된다. 또한 하나의 원격 repo에 여러 로컬 repo를 연결하여 동시 작업이 가능하니 용이하다.

또한 작업을 하며 commit을 통해 이전의 프로젝트로부터 무엇이 변경되었는지, 누가 변경하였는지를 표시할 수 있어 효율적이다.

<h4> 나의 현재 진행 상황 </h4>

현재 sourcetree를 이용해 로컬 repo를 관리하고 원격 repo에 pull, push를 하고 있다.

github에 insta_clone repo를 개설하여 이번의 인스타 클론 코딩 UI작업을 할 예정이다.

<h4> git 사용 팁 </h4>

- 원격 repo 에러시 삭제하는 법
	해당 repository의 setting -> options -> Danger Zone -> Delete this repository 후 
    user이름/repository명 을 기입하면 된다.
    
- sourcetree에서 첫 push 하는데 에러발생
	local 데이터와 원격 repo 데이터가 달라서 발생하므로
    먼저 원격 repo의 데이터를 pull로 받은 다음 (병합 및 재배치 설정) 다시 push하면 에러 없이 push 된다.
    
- 초보자를 위한 패턴
	혼자 git 프로젝트를 진행할 때에는 
    [pull -> 로컬 repo commit -> push]의 패턴으로	  진행하면 된다. 해당 패턴은 충돌을 피하기 위해 시작할	때의 버전을 맞추고 시작하는 것이다.
    
    
